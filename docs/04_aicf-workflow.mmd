%% AICF 2.0 Workflow
%% How AICF 2.0 enables persistent memory across chat sessions

graph TB
    Start([Developer working in Chat #1]) --> Working[Building features,<br/>making decisions,<br/>solving problems]

    Working --> ChatFull{Chat approaching<br/>token limit?}

    ChatFull -->|No| Working
    ChatFull -->|Yes| Decision{Have .aicf/<br/>directory?}

    Decision -->|No| Migrate[Run: npx aic migrate<br/>Convert .ai/ to .aicf/]
    Decision -->|Yes| NewChat

    Migrate --> MigrateResult[Created .aicf/ directory:<br/>- conversations.aicf<br/>- decisions.aicf<br/>- tasks.aicf<br/>- issues.aicf<br/>- index.aicf]

    MigrateResult --> NewChat[Start Chat #2<br/>Fresh session]

    NewChat --> DirectRead[Say: Read .aicf/ and continue]

    DirectRead --> AIReads[AI reads .aicf/ files directly:<br/>- index.aicf project overview<br/>- conversations.aicf all chats<br/>- decisions.aicf all decisions<br/>- tasks.aicf all tasks<br/>- issues.aicf all issues]

    AIReads --> Parse[AI parses @SCHEMA sections<br/>Understands pipe-delimited format<br/>Self-documenting structure]

    Parse --> FullContext[Chat #2 AI has:<br/>✅ All conversation history<br/>✅ All technical decisions<br/>✅ All tasks and status<br/>✅ All known issues<br/>✅ Full project context]

    FullContext --> Continue[Continue working<br/>ZERO context loss<br/>ZERO manual steps]

    Continue --> MoreWork[Build more features,<br/>make more decisions]

    MoreWork --> ChatFull2{Chat #2<br/>filling up?}

    ChatFull2 -->|No| MoreWork
    ChatFull2 -->|Yes| Repeat[Repeat process:<br/>Start Chat #3<br/>Say: Read .aicf/ and continue]

    Repeat --> Infinite[Infinite memory<br/>across ALL chats]

    Infinite --> Benefits[Benefits:<br/>✅ No re-explaining<br/>✅ No context loss<br/>✅ No copy/paste<br/>✅ No manual steps<br/>✅ 88% token savings<br/>✅ Works with ALL AIs]

    style Start fill:#e1f5ff,stroke:#0288d1,stroke-width:2px
    style Working fill:#fff4e6,stroke:#ff9800,stroke-width:2px
    style ChatFull fill:#ffe6e6,stroke:#f44336,stroke-width:2px
    style Decision fill:#ffe6e6,stroke:#f44336,stroke-width:2px
    style Migrate fill:#e1f5ff,stroke:#0288d1,stroke-width:3px
    style MigrateResult fill:#e6ffe6,stroke:#4caf50,stroke-width:2px
    style NewChat fill:#f3e5f5,stroke:#9c27b0,stroke-width:3px
    style DirectRead fill:#fff4e6,stroke:#ff9800,stroke-width:2px
    style AIReads fill:#e1f5ff,stroke:#0288d1,stroke-width:2px
    style Parse fill:#fff4e6,stroke:#ff9800,stroke-width:2px
    style FullContext fill:#e6ffe6,stroke:#4caf50,stroke-width:3px
    style Continue fill:#e6ffe6,stroke:#4caf50,stroke-width:2px
    style MoreWork fill:#fff4e6,stroke:#ff9800,stroke-width:2px
    style ChatFull2 fill:#ffe6e6,stroke:#f44336,stroke-width:2px
    style Repeat fill:#e1f5ff,stroke:#0288d1,stroke-width:2px
    style Infinite fill:#e1bee7,stroke:#8e24aa,stroke-width:3px
    style Benefits fill:#c8e6c9,stroke:#388e3c,stroke-width:3px
